<html>
<head>
    <title>Görev Yönetim Sayfası</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            margin: 0;
            padding: 0;
        }

        .card {
            background: #fff;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .card-header {
            background-color: #007bff;
            color: white;
            font-weight: bold;
            padding: 10px;
            text-align: center;
        }

        .card-body {
            padding: 15px;
            flex-grow: 1;
        }

        .btn-primary {
            background-color: #007bff;
            border: none;
            color: white;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }

        .card-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 10px;
        }

        .card-item {
            flex-grow: 1;
            flex-basis: calc(25% - 10px);
            display: flex;
            flex-direction: column;
            margin-bottom: 10px;
        }

            .card-item .card-header,
            .card-item .card-body,
            .card-item .card-footer {
                flex-grow: 0;
            }

            .card-item .card-footer {
                cursor: pointer;
                background-color: #e2e6ea;
                transition: background-color 0.3s;
                margin-top: auto;
            }

                .card-item .card-footer:hover {
                    background-color: #d6d8db;
                }

        .card-clickable {
            cursor: pointer;
            transition: background-color 0.3s, box-shadow 0.3s;
        }

            .card-clickable:hover {
                background-color: #f8f9fa;
                box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            }

        .card-header {
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
        }

            .card-header h4 {
                margin-bottom: 0;
            }


        #btnStatusadd {
            position: absolute;
            left: 74.2%;
            top: 6.9%;
        }

    </style>
</head>
<body>

    <div class="card col-12 p-3" style="background-color: #f8f9fa; position: relative;">
        <div class="card-header d-flex align-items-center" style="background-color: #e9ecef; position: relative;">
            <h4 class="mb-0 mx-auto">Görev Yönetim Sayfası</h4>
        </div>
        <div class="d-flex ">
            <div id="content" class="d-flex flex-wrap p-2 col-12" style="background-color: #f8f9fa;">
            </div>
            <a href="#" title="Yeni Durum Ekle" id="btnStatusadd" class="btn btn-lg">
                <i class="uil-plus" style="font-size: 2rem;"></i>
            </a>

        </div>

    </div>





    <div class="modal fade" id="modalStatus" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-sm" role="document">
            <div class="modal-content">
                <form id="statusForm" novalidate>
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalTitle"></h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3 row">
                            <input type="text" class="form-control" id="txtStatusname" placeholder="Durum adı giriniz" required>

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                        <button type="button" id="btnSavee" class="btn btn-primary">Kaydet</button>
                    </div>
                </form>

            </div>
        </div>
    </div>

    <div class="modal fade" id="modalAdd" tabindex="-1" data-bs-backdrop="static" data-bs-keyboard="false" role="dialog" aria-labelledby="modalTitleId" aria-hidden="true">
        <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalTitle">
                    </h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="formMission">
                        <div class="mb-3">
                            <label for="txtTitle" class="form-label">Başlık</label>
                            <input type="text" class="form-control" id="txtTitle" placeholder="Lütfen Görev Başlığı Ekleyiniz">
                        </div>
                        <div class="mb-3">
                            <label for="txtDescription" class="form-label">Açıklama</label>
                            <textarea class="form-control" id="txtDescription" placeholder="Lütfen Görev Açıklaması Ekleyiniz"></textarea>
                        </div>
                        @* <div class="mb-3">
                        <label for="ddlFiles" class="form-label">Files</label>
                        <select class="form-select" id="ddlFiles" ></select>
                        </div> *@

                        <div class="mb-3">
                            <label for="ddlPriorities" class="form-label">Öncelik</label>
                            <select class="form-select" id="ddlPriorities"></select>
                        </div>

                        <div class="mb-3">
                            <label for="ddlProjects" class="form-label">Görevin Ait Olduğu Proje</label>
                            <select class="form-select" id="ddlProjects"></select>
                        </div>
                        <div class="mb-3">
                            <label for="ddlUsers" class="form-label">Kullanıcılar</label>
                            <select class="form-select" id="ddlUsers" multiple></select>
                        </div>
                        <div class="mb-3">
                            <label for="txtEndDate" class="form-label">Görevin Bitmesi Gereken Tarihi</label>
                            <input type="date" class="form-control" id="txtEndDate">
                        </div>

                        <input type="hidden" id="hiddenStatusId" value="">

                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="chkSmsNotification">
                            <label class="form-check-label" for="chkSmsNotification">Görev Sahiplerine SMS Gönderilsin mi?</label>
                        </div>
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" id="chkMailNotification">
                            <label class="form-check-label" for="chkMailNotification">Görev Sahiplerine Mail Gönderilsin mi?</label>
                        </div>
                    </form>

                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                        Kapat
                    </button>
                    <button type="button" id="btnSave" class="btn btn-primary">Kaydet</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="modalDetail" tabindex="-1" aria-labelledby="taskModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="taskModalLabel"></h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="col-lg-8 left-panel">
                            <p><i class="bi bi-link"></i> İlişkili: <a href="/project/index" id="project"></a></p>
                            <div class="mt-3">

                                <div id="timer-container">
                                    <div id="elapsed-time" class="elapsed-time-display">00:00:00</div>
                                </div>
                                <div id="timer-controls" margin-top: 10px;">
                                </div>
                            </div>
                            <div class="mt-3">
                                <h6>
                                    <i class="uil-info-circle"></i> Açıklama
                                    <i class="uil-comment-alt-edit ms-2" title="Düzenle" id="edit-description"></i>
                                </h6>
                                <div id="description-container">
                                    <p id="description"></p>
                                </div>
                                <div id="edit-description-container" style="display: none;">
                                    <textarea class="form-control" id="edit-description-text" placeholder="Açıklamayı buraya yazın..."></textarea>
                                    <button type="button" id="save-description" class="btn btn-primary btn-sm">Kaydet</button>
                                    <button type="button" id="close-description" class="btn btn-danger btn-sm">Kapat</button>
                                </div>
                            </div>
                            <div class="mt-3">
                                <h6><i class="bx bx-chat"></i> Yorumlar</h6>
                                <p id="comments"></p>
                                <textarea class="form-control" id="newComment" placeholder="Yorum Yazınız" required></textarea>
                                <div class="card border border-primary">
                                </div>
                                <div class="text-end">
                                    <button class="btn btn-primary btn-sm " id="btnAddComment">Yorum Ekle</button>
                                </div>

                            </div>
                        </div>
                        <div class="col-lg-4 right-panel">
                            <div class="border-start ps-3">
                                <h6><i class="bi bi-info-square"></i> Görev Bilgisi</h6>
                                <p id="created-date">
                                    Oluşturuldu:
                                </p>
                                <p class="uil-clipboard-notes" id="statuss"> Durum</p>
                                <p class="uil-calendar-alt" id="start-date"> Başlangıç Tarihi: </p>
                                <p class="uil-calendar-slash" id="end-date">
                                    Bitiş Tarihi:
                                </p>
                                <p class="mdi mdi-priority-high" id="priority">Öncelik: </p>
                               
                                <p class="mdi mdi-timer-off-outline" id="total-time">
                                    Girilen Toplam Süre:
                                </p>
                                <p id="emailNotification">
                                    <i class="uil-fast-mail"></i> E-posta Bildirimi: <span id="emailNotificationIcon"></span>
                                </p>
                                <p id="smsNotification">
                                    <i class="uil-calling"></i> SMS Bildirimi: <span id="smsNotificationIcon"></span>
                                </p>

                                <h6>
                                    <i class="uil-users-alt"></i> Atanan Üyeler
                                </h6>
                                <p id="assigned-users"></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    @section Scripts {

        <script>
            $(document).ready(function () {
                $.ajax({
                    url: '/Status/GetAll',
                    type: 'POST',
                    success: function (res) {
                        let groupedData = res.data;

                        groupedData.forEach(status => {
                            $("#content").append(`
                                                            <div class="card col-3 me-2" id="status-card-${status.id}" style="background-color: #e9ecef;">
                                                                <div class="card-header text-dark text-center position-relative p-3 border-bottom" style="background-color: #dee2e6;">
                                                                    <div class="d-flex justify-content-between align-items-center">
                                                                        <h5 class="mb-0 d-flex align-items-center">
                                                                            ${status.name}
                                                                            <span class="badge bg-secondary ms-2">${status.taskCount}</span>
                                                                        </h5>
                                                                                   <a onclick="updateStatus(${status.id},this);" class="btn btn-link position-absolute" style="top: 10px; right: 10px; font-size: 1.5rem; color: black; background: none; border: none; padding: 0; text-decoration: none;">
                                                                            ⋮
                                                                        </a>
                                                                    </div>
                                                                </div>

                                                                <div class="card-body" id="tasks-${status.id}" ondrop="drop(event)" ondragover="allowDrop(event)">
                                                                </div>
                                                                <div class="card-footer text-start text-dark" id="taskAdd-${status.id}" style="background-color: #dee2e6; cursor: pointer;">
                                                                    <a onclick="addMission(${status.id},this)" title="Görev Ekle" class="btn btn-hover"><i class="bx bx-plus"></i> Görev Ekle</a>
                                                                </div>
                                                            </div>
                                                        `);
                        });
                        fillCardMision();
                    }
                });

                addMission = (statusId) => {
                    console.log(statusId);
                    $("#hiddenStatusId").val(statusId);
                    $("#modalAdd").modal("show");
                    $("#deletedRow").hide();
                    $("#formMission").trigger('reset');
                    $("#modalTitle").text("Yeni Görev Ekleme");
                    fillUsers();
                    fillPriorities();
                    fillProjects();

                    $("#btnSave").text("Kaydet").off().click(() => {
                        let statusId = $("#hiddenStatusId").val();

                        let mission = {
                            title: $("#txtTitle").val(),
                            description: $("#txtDescription").val(),
                            priorityId: $("#ddlPriorities").val(),
                            projectId: $("#ddlProjects").val(),
                            statusId: statusId,
                            endDate: $("#txtEndDate").val()
                        };

                        let selectedUserIds = $("#ddlUsers").val();

                        $.ajax({
                            url: '/Mission/Add',
                            type: 'POST',
                            data: {
                                mission: mission,
                                userIds: selectedUserIds
                            },
                            success: function (res) {
                                $("#modalAdd").modal("hide");
                                let emails = res.assignees.map(user => user.email).join("<br/>");

                                let newTask = `
                                                                <div class="col-sm-12">
                                                                    <div class="card card-clickable" id="task-${res.id}" draggable="true" ondragstart="drag(event)" style="cursor: pointer; transition: background-color 0.3s, box-shadow 0.3s;">
                                                                        <div class="card-body">
                                                                            <h5 class="card-title">#${res.id} ${res.title}</h5>
                                                                            <p class="card-text">${res.description}</p>
                                                                            <h6 class="card-text">${emails}</h6>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            `;

                                $(`#tasks-${statusId}`).append(newTask);
                                toastr.success("Görev Başarıyla Oluşturuldu");
                            }
                        });
                    });
                }
            });
            function updateStatus(statusId, button) {

                $.ajax({
                    url: '/Status/GetById',
                    type: 'POST',
                    data: { id: statusId },
                    success: function (res) {

                        $("#modalStatus").modal("show");
                        $("#modalTitle").text("Durum Düzenle");
                        $("#txtStatusname").val(res.name);

                        $("#btnSavee").text("Düzenle").off().click(function () {

                            res.name = $("#txtStatusname").val();

                            $.ajax({
                                url: '/Status/Update',
                                type: 'POST',
                                data: {
                                    missionStatus: res
                                },
                                success: function (res1) {
                                    $("#modalStatus").modal("hide");


                                    $(`#status-card-${statusId} .card-header h5`).text(res1.name);
                                    $(`#badge-${status.taskCount}`).text(res1.taskCount); //count getirilmeye çalışıldı.
                                    toastr.success("Durum başarıyla güncellendi!");

                                }
                            });


                        });

                    }

                });

            }


            $("#btnStatusadd").click(function () {
                $("#modalStatus").modal("show");
                $("#modalStatus").trigger("reset");
                $("#modalTitle").text("Yeni Durum Kaydı");

                $("#btnSavee").text("Kaydet").off().click(function () {
                    let data = {
                        missionStatus: {
                            name: $("#txtStatusname").val()


                        }
                    }

                    $.ajax({
                        url: '/Status/Add',
                        type: 'POST',
                        data: data,
                        success: function (res1) {
                            $("#modalStatus").modal("hide");
                            $(`#status-card-${statusId} .card-header h5`).text(res1.name);
                            toastr.success("Durum başarıyla eklendi!");

                        }
                    });
                })
            })
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("https://localhost:7207/SignalRHub") 
                .build();
            connection.start().catch(err => console.error(err.toString()));
            function fillCardMision() {
                $.ajax({
                    url: "/Mission/GetAllCard",
                    success: (data) => {
                        for (var item of data) {
                            let emails = "";
                            for (var user of item.assignees) {
                                emails += `<i title="${user.email}" class="uil-user-circle"></i>`;
                            }

                            $("#tasks-" + item.statusId).append(`
                                                            <div class="col-sm-12">
                                                                                        <div class="card card-clickable" id="task-${item.id}" draggable="true" ondragstart="drag(event)" style="cursor: pointer; transition: background-color 0.3s, box-shadow 0.3s;" onclick="showMissionDetails(${item.id})">
                                                                    <div class="card-body">
                                                                        <div class="d-flex align-items-start justify-content-between">
                                                                            <h5 class="card-title">#${item.id} ${item.title}</h5>
                                                                            <div class="email-icons">
                                                                                ${emails}
                                                                            </div>
                                                                        </div>
                                                                        <p class="card-text">${item.description}</p>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        `);
                        }


                    }
                });
            }

            function drag(ev) {
                ev.dataTransfer.setData("text", ev.target.id);
            }
            function allowDrop(ev) {
                ev.preventDefault();
            }
            function drop(ev) {
                ev.preventDefault();
                var data = ev.dataTransfer.getData("text");
                var taskElement = document.getElementById(data);


                if (ev.target.classList.contains('card-body')) {
                    var newStatusId = ev.target.id.split('-')[1];
                    ev.target.appendChild(taskElement);
                    $.ajax({
                        url: '/Mission/UpdateStatus',
                        type: 'POST',
                        data: {
                            taskId: data.split('-')[1],
                            statusId: newStatusId
                        },
                        success: function (res) {
                            toastr.success("Görev başarıyla güncellendi.");
                            connection.invoke("NotifyTaskUpdated", data.split('-')[1], newStatusId)
                                .catch(err => console.error(err));
                        }
                    });
                }
            }
            connection.on("TaskUpdated", (taskId, newStatusId) => {
                console.log(`Görev ${taskId} yeni duruma alındı: ${newStatusId}`);
            });
            function fillProjects() {
                $.ajax({
                    url: '/Project/GetAll',
                    type: 'GET',
                    success: (res) => {
                        $("#ddlProjects").empty();
                        $("#ddlProjects").append(new Option("Lütfen Eklenecek Projeyi Seçiniz", "", true, true));
                        for (var item of res.data) {
                            $("#ddlProjects").append(new Option(item.name, item.id));
                        }
                        $("#ddlProjects").select2({
                            dropdownParent: $('#modalAdd'),
                            placeholder: "Lütfen Eklenecek Projeyi Seçiniz",
                            allowClear: true,
                            width: "100%"
                        });
                        $("#ddlProjects").val(null).trigger('change');
                    }
                });
            }

            function fillUsers() {
                $.ajax({
                    url: '/Project/FillUsers',
                    type: 'GET',
                    success: (res) => {
                        $("#ddlUsers").empty();

                        for (var item of res.data) {
                            $("#ddlUsers").append(new Option(item.email, item.id));
                        }
                        $("#ddlUsers").select2({
                            dropdownParent: $('#modalAdd'),
                            width: "100%",
                            placeholder: "Göreve Dahil olacak Kullanıcıları Seçiniz"

                        });
                    }
                });
            }

            function fillFiles() {
                $.ajax({
                    url: '/TaskFile/GetAll',
                    type: 'GET',
                    success: (res) => {
                        $("#ddlFiles").empty();

                        for (var item of res.data) {
                            $("#ddlFiles").append(new Option(item.name, item.id));
                        }

                    }
                });
            }

            function fillPriorities() {
                $.ajax({
                    url: '/Priority/GetAll',
                    type: 'GET',
                    success: (res) => {
                        $("#ddlPriorities").empty();
                        $("#ddlPriorities").append(new Option("Lütfen Öncelik Seçiniz", "", true, true));
                        for (var item of res.data) {
                            $("#ddlPriorities").append(new Option(item.name, item.id));
                        }
                        $("#ddlPriorities").select2({
                            dropdownParent: $('#modalAdd'),
                            placeholder: "Lütfen Öncelik Seçiniz",
                            allowClear: true,
                            width: "100%"
                        });
                        $("#ddlPriorities").val(null).trigger('change');
                    }
                });
            }
            showMissionDetails = function (missionId, button) {
                $("#edit-description").off("click");
                $("#save-description").off("click");
                $("#close-description").off("click");
                $.ajax({
                    url: `/Mission/GetById/${missionId}`,
                    type: 'POST',
                    data: { id: missionId },
                    success: function (res) {

                        $("#modalDetail").modal("show");
                        $("#taskModalLabel").text(res.title);
                        $("#statuss").text(`Durum: ${res.statusName}`);
                        $("#description").text(res.description);
                        $("#project").text(`#${res.projectId} - ${res.projectName}`);
                        $("#created-date").text(`Oluşturuldu: ${formatDate(res.dateCreated)}`);
                        $("#end-date").text(`Bitiş Tarihi: ${formatDate(res.endDate)}`);
                        $("#start-date").text(res.startDate ? `Başlangıç Tarihi: ${formatDate(res.startDate)}` : 'Başlangıç Tarihi: Başlamadı');
                        $("#priority").text(`Öncelik: ${res.priorityName}`);

                        //$("#logged-time").text(`Girilen Süre: ${formatDuration(res.loggedTime)}`);
                        //$("#total-time").text(`Girilen Toplam Süre: ${formatDuration(res.totalTime)}`);
                        let assigneesText = "";
                        if (res.assigneeEmails && res.assigneeEmails.length > 0) {
                            for (var email of res.assigneeEmails) {
                                assigneesText += email + "<br/>";
                            }
                        } else {
                            assigneesText = "Atanan üye yok";
                        }
                        $("#assigned-users").html(assigneesText); // .text yerine .html kullanıldı
                        $("#emailNotificationIcon").html(res.emailNotification ? '<i class="uil-check text-success"></i>' : '<i class="uil-times text-danger"></i>');
                        $("#smsNotificationIcon").html(res.smsNotification ? '<i class="class=uil-check text-success"></i>' : '<i class="uil-times text-danger"></i>');
                        let commentsText = "";
                        if (res.comments && res.comments.length > 0) {
                            for (var comment of res.comments) {
                                commentsText += `
                                                            <div class="mt-4">
                                                               <div>
                                                                  <p class="float-sm-end text-muted font-size-13">${formatCommentDate(comment.dateCreated)}</p>
                                                               </div>
                                                            <div class="border p-4 rounded">
                                                              <div class="border-bottom pb-3">
                                                                <p class="text-muted mb-4 font-size-15 comment-description">${comment.description}</p>
                                                                <div class="d-flex align-items-start">
                                                                  <div class="flex-grow-1 d-flex justify-content-between">
                                                                    <h5 class="font-size-13 mb-0">${comment.user.email}</h5>
                                                                    <div class="text-end">
                                                                      <button onclick="addCommentParent(${comment.id}, this)" class="btn btn-sm">Yanıtla</button>
                                                                    </div>
                                                                  </div>
                                                                </div>
                                                               </div>
                                                              </div>
                                                              </div>
                                                              <style>
                                                                    .comment-description {
                                                              word-break: break-word;
                                                              overflow-wrap: break-word;
                                                              white-space: pre-wrap;
                                                              }
                                                              </style>
                                                    `;
                            }
                        } else {
                            commentsText = "<p>Henüz yorum yapılmamış.</p>";
                        }
                        $("#comments").html(commentsText);

                        $("#modalDetail").data('missionId', missionId);
                    },
                    error: function (err) {
                        console.error("Görev detayları yüklenirken hata oluştu:", err);
                    }
                });
                $("#edit-description").click(function () {
                    $("#description-container").hide();
                    $("#edit-description-container").show();
                    $("#edit-description-text").val($("#description").text().trim());
                });

                $("#save-description").click(function () {
                    const updatedDescription = $("#edit-description-text").val().trim();
                    if (updatedDescription === "") {
                        toastr.error('Açıklama boş olamaz. Lütfen bir açıklama girin.');
                        return; // İşlem yapılmadan çıkış yap
                    }
                    $.ajax({
                        url: `/Mission/UpdateDescription/${missionId}`,
                        type: 'POST',
                        data: { missionId: missionId, description: updatedDescription },
                        success: function (res) {
                            if (res.success) {
                                $("#description").text(updatedDescription);
                                $("#edit-description-container").hide();
                                $("#description-container").show();
                                toastr.success('Açıklama başarıyla güncellendi.');

                            } else {
                                toastr.error('Açıklama güncellenirken hata oluştu: ' + res.message);
                            }
                        },
                        error: function (err) {
                            toastr.error('Açıklama güncellenirken bir hata oluştu.', err);
                        }
                    });
                });
                $("#close-description").click(function () {
                    $("#edit-description-container").hide();
                    $("#description-container").show();
                });
                $("#btnAddComment").off().click(function () {
                    // let missionId = $("#modalDetail").data('missionId');
                    let comment = {
                        description: $("#newComment").val(),
                        taskId: missionId,
                    }
                    if ($("#newComment").val().length > 0) {
                        $.ajax({
                            url: '/Comment/Add',
                            type: 'POST',
                            contentType: 'application/json',
                            dataType: 'json',
                            data: JSON.stringify(comment),
                            success: function (res) {
                                $("#newComment").val("");
                                let commentsText = "";
                                for (var comment of res.comments) {
                                    commentsText += `
                                                                       <div class="mt-4">
                                                                         <div>
                                                                            <p class="float-sm-end text-muted font-size-13">${formatCommentDate(comment.dateCreated)}</p>
                                                                         </div>
                                                                            <div class="border p-4 rounded">
                                                                              <div class="border-bottom pb-3">
                                                                                <p class="text-muted mb-4 font-size-15 comment-description">${comment.description}</p>
                                                                                  <div class="d-flex align-items-start">
                                                                                    <div class="flex-grow-1 d-flex justify-content-between">
                                                                                      <h5 class="font-size-13 mb-0">${comment.user.email}</h5>
                                                                                      <div class="text-end">
                                                                                       <button onclick="addCommentParent(${comment.id}, this)" class="btn btn-sm">Yanıtla</button>
                                                                                      </div>
                                                                                    </div>
                                                                                  </div>
                                                                              </div>
                                                                           </div>
                                                                        </div>
                                                                        <style>
                                                                            .comment-description {
                                                                        word-break: break-word;
                                                                        overflow-wrap: break-word;
                                                                        white-space: pre-wrap;
                                                                        }
                                                                        </style>
                                                                        `;
                                }
                                $("#comments").html(commentsText);

                            },
                            error: function (err) {
                                console.error("Yorum eklenirken hata oluştu:", err);
                            }
                        });
                    } else {
                        toastr.error("Lütfen yorum yazınız.")
                    }

                });
            };

            //tarih
            function formatDate(dateString) {
                if (!dateString) return "";
                let date = new Date(dateString);
                return date.toLocaleString('tr-TR', {
                    day: '2-digit',
                    month: '2-digit',
                    year: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit',
                    second: '2-digit'
                });
            }
            //saatisz
            // function formatDate(dateString) {
            //     if (!dateString) return "";
            //     let date = new Date(dateString);
            //     return date.toLocaleDateString();
            // }


            //sonra bakılcak
            // function formatDuration(duration) {
            //     return duration; // Uygun formatlama ekleyin
            // }

        </script>
    }
</body>
</html>
